---
title: "CENT S1-S2 PCA Clustering on LS Impressions"
output:
  html_notebook: default
  html_document: default
---

```{r}
##################################################################################
# inputs:  CENT_LS_dct_spread.csv, CENT_LS_dct_spread_cont.csv, CENT_LS_dct.csv
#
# purpose: PCA clustering (3 clusters (Cumulative proportion of variance = 1.0 at
#          3 Principal components for all PCAs, but for non-contiuous s1-s2,
#          4 clusters for the latter) for S1, S2, and S1 & S2 normalized together)       
##################################################################################
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
library(tidyr)
library(dplyr)
library(ggplot2)
library(plotly)
```

# PCA S1

Read data, prepare data
```{r}
dct_spread <- read.csv("CENT_LS_dct_spread.csv")
dct_df <- read.csv("CENT_LS_dct.csv")

pca_s1 <- dct_spread %>% 
  filter(Season_num == 1) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

PCA
```{r}
pca_s1 <- prcomp(pca_s1)

summary(pca_s1)
```

Assign clusters based on PCA contribution
```{r}
pca_s1_df <- as.data.frame(pca_s1$x)
pca_s1_df$Show_name <- dct_spread[dct_spread$Season_num == 1,]$Show_Name

cluster_assign_s1<- pca_s1_df[,c(51, 1, 2, 3)]
cluster_assign_s1$culster <- max.col(cluster_assign_s1[, c(2, 3, 4)], ties.method = "first")

df_pcaclusters_s1 <- dct_spread %>% filter(Season_num == 1) %>% 
  select(-X, -Season_num)
df_pcaclusters_s1$cluster <- cluster_assign_s1$culster
df_pcaclusters_s1 <- df_pcaclusters_s1[,c(1, 2, 103, 3:102)]
```

Long form data, plot
```{r}
pca_s1_long <- gather(df_pcaclusters_s1, key = period, value = dct_values ,X1:X100)
pca_s1_long$period <- as.numeric(sub("X", "", pca_s1_long$period))

pca_s1_plot <- pca_s1_long %>% 
  ggplot(aes(x = period, y = dct_values, color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster, nrow = 3)

ggplotly(pca_s1_plot) %>% 
  layout(title = "Season 1 with 3 PCA Clusters (LS)", 
         margin = list(t = 150))
```

### Shows in Each Cluster

```{r}
pca_s1_clusters <- list(as.character(unique(df_pcaclusters_s1[df_pcaclusters_s1$cluster == 1,]$Show_Name)),
                        as.character(unique(df_pcaclusters_s1[df_pcaclusters_s1$cluster == 2,]$Show_Name)),
                        as.character(unique(df_pcaclusters_s1[df_pcaclusters_s1$cluster == 3,]$Show_Name)))

pca_s1_clusters 
```

```{r}
# PLOT FOR S1 CLUSTERS & S2 TRENDS
s2_spread <- dct_spread %>% 
  filter(Season_num == 2) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num)

s2_spread_newcols <- c(paste("X", 101:200, sep = ""))
colnames(s2_spread)[2:ncol(s2_spread)] <- c(s2_spread_newcols)

s1_pcaclusters_s2_trends <- bind_cols(df_pcaclusters_s1, 
                                    s2_spread[, 2:ncol(s2_spread)])

s1_pcaclusters_s2_trends <- merge(s1_pcaclusters_s2_trends[, c("cluster", 
                                                         "Show_Name")], 
                               dct_df, by = "Show_Name")

dct_s1_pcaclusters_s2_trends <- s1_pcaclusters_s2_trends %>% 
  filter(Season_num == 1 | Season_num == 2) %>% 
  group_by(Network, Show_Name) %>% 
  mutate(period = row_number())

s1_pcaclusters_s2_trends_plot <- dct_s1_pcaclusters_s2_trends %>%
  ggplot(aes(x = period, y = dct_values, color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster, nrow = 3) + 
  theme(axis.title.x = element_blank(), 
        axis.title.y = element_blank())

ggplotly(s1_pcaclusters_s2_trends_plot) %>% 
  layout(title = "Season 1 with 3 PCA Clusters & Season 2 Trends (LS)", 
         margin = list(t = 150))
```


-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------


# PCA S2

```{r}
pca_s2 <- dct_spread %>% 
  filter(Season_num == 2) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

PCA
```{r}
pca_s2 <- prcomp(pca_s2)

summary(pca_s2)
```

Assign clusters based on PCA contribution
```{r}
pca_s2_df <- as.data.frame(pca_s2$x)
pca_s2_df$Show_name <- dct_spread[dct_spread$Season_num == 2,]$Show_Name

cluster_assign_s2<- pca_s2_df[,c(51, 1, 2, 3)]
cluster_assign_s2$culster <- max.col(cluster_assign_s2[, c(2, 3, 4)], ties.method = "first")

df_pcaclusters_s2 <- dct_spread %>% filter(Season_num == 2) %>% 
  select(-X, -Season_num)
df_pcaclusters_s2$cluster <- cluster_assign_s2$culster
df_pcaclusters_s2 <- df_pcaclusters_s2[,c(1, 2, 103, 3:102)]
```

Long form data, plot
```{r}
pca_s2_long <- gather(df_pcaclusters_s2, key = period, value = dct_values ,X1:X100)
pca_s2_long$period <- as.numeric(sub("X", "", pca_s2_long$period))

pca_s2_plot <- pca_s2_long %>% 
  ggplot(aes(x = period, y = dct_values, color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster, nrow = 3)

ggplotly(pca_s2_plot) %>% 
  layout(title = "Season 2 with 3 PCA Clusters (LS)", 
         margin = list(t = 150))
```

### Shows in Each Cluster

```{r}
pca_s2_clusters <- list(as.character(unique(df_pcaclusters_s2[df_pcaclusters_s2$cluster == 1,]$Show_Name)),
                        as.character(unique(df_pcaclusters_s2[df_pcaclusters_s2$cluster == 2,]$Show_Name)),
                        as.character(unique(df_pcaclusters_s2[df_pcaclusters_s2$cluster == 3,]$Show_Name)))

pca_s2_clusters 
```


-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------


# PCA S1-S2 Continuous

```{r}
dct_spread_cont <- read.csv("CENT_LS_dct_spread_cont.csv")
pca_cont <- dct_spread_cont %>%
  select(-X, -Network, -Show_Name)
```

PCA
```{r}
pca_cont <- prcomp(pca_cont)

summary(pca_cont)
```

Assign clusters based on PCA contribution
```{r}
pca_cont_df <- as.data.frame(pca_cont$x)
pca_cont_df$Show_name <- dct_spread_cont$Show_Name

cluster_assign_cont<- pca_cont_df[,c(51, 1, 2, 3)]
cluster_assign_cont$culster <- max.col(cluster_assign_cont[, c(2, 3, 4)], ties.method = "first")

df_pcaclusters_cont <- dct_spread_cont %>% select(-X)
df_pcaclusters_cont$cluster <- cluster_assign_cont$culster
df_pcaclusters_cont <- df_pcaclusters_cont[,c(1, 2, 103, 3:102)]
```

Long form data, plot
```{r}
pca_cont_long <- gather(df_pcaclusters_cont, key = period, value = dct_values ,X1:X100)
pca_cont_long$period <- as.numeric(sub("X", "", pca_cont_long$period))

pca_cont_plot <- pca_cont_long %>% 
  ggplot(aes(x = period, y = dct_values, color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster, nrow = 3)

ggplotly(pca_cont_plot) %>% 
  layout(title = "S1-S2 (Continuous) with 3 PCA Clusters (LS)", 
         margin = list(t = 150))
```

### Shows in Each Cluster

```{r}
pca_cont_clusters <- list(as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 1,]$Show_Name)),
                          as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 2,]$Show_Name)),
                          as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 3,]$Show_Name)))

pca_cont_clusters 
```


-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------


# PCA S1-S2 Non-Continuous

```{r}
temp1 <- filter(dct_spread, Season_num == 1)
temp2 <- filter(dct_spread, Season_num == 2)
temp2_newcols <- c(paste("X", 101:200, sep = ""))
colnames(temp2)[5:ncol(temp2)] <- c(temp2_newcols)

dct_spread_s1_s2 <- bind_cols(temp1, temp2[, 5:ncol(temp2)])
rm(temp1, temp2, temp2_newcols)

pca_s1_s2 <- dct_spread_s1_s2 %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

PCA
```{r}
pca_s1_s2 <- prcomp(pca_s1_s2)

summary(pca_s1_s2)
```

Assign clusters based on PCA contribution
```{r}
pca_s1_s2_df <- as.data.frame(pca_s1_s2$x)
pca_s1_s2_df$Show_name <- dct_spread[dct_spread$Season_num == 1, ]$Show_Name

cluster_assign_s1_s2<- pca_s1_s2_df[,c(51, 1, 2, 3, 4)]
cluster_assign_s1_s2$culster <- max.col(cluster_assign_s1_s2[, c(2, 3, 4, 5)], ties.method = "first")

df_pcaclusters_s1_s2 <- dct_spread_s1_s2 %>% select(-X)
df_pcaclusters_s1_s2$cluster <- cluster_assign_s1_s2$culster
df_pcaclusters_s1_s2 <- select(df_pcaclusters_s1_s2, -Season_num)
df_pcaclusters_s1_s2 <- df_pcaclusters_s1_s2[,c(1, 2, 203, 3:202)]
```

Long form data, plot
```{r}
pca_s1_s2_long <- gather(df_pcaclusters_s1_s2, key = period, value = dct_values ,X1:X200)
pca_s1_s2_long$period <- as.numeric(sub("X", "", pca_s1_s2_long$period))

pca_s1_s2_plot <- pca_s1_s2_long %>% 
  ggplot(aes(x = period, y = dct_values, color = Show_Name)) + 
  geom_line() + 
  facet_wrap(~ cluster)

ggplotly(pca_s1_s2_plot) %>% 
  layout(title = "S1-S2 (Non-Continuous) with 4 PCA Clusters (LS)", 
         margin = list(t = 150))
```

### Shows in Each Cluster

```{r}
pca_s1_s2_clusters <- list(as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 1,]$Show_Name)),
                           as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 2,]$Show_Name)),
                           as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 3,]$Show_Name)),
                           as.character(unique(df_pcaclusters_cont[df_pcaclusters_cont$cluster == 4,]$Show_Name)))

pca_s1_s2_clusters 

```
