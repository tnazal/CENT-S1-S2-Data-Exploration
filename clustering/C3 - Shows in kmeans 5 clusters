---
title: "R Notebook"
output:
  html_document: default
  html_notebook: default
---

#################################################
Incomplete, the main functions are there, we need to do this for all possible combinations
###############################################


```{r}
library(plyr)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(plotly)
library(factoextra)
library(dtwclust)
library(fpc)
```


#Rebase - Kmeans

##S1 - 5 Clusters
```{r}
dct_df <- read.csv("CENT_rebase_dct.csv")
dct_spread <- read.csv("CENT_rebase_dct_spread.csv")
```

```{r}
cluster_s1 <- dct_spread %>% 
  filter(Season_num == 1) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s1 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1, centers = .$k, nstart = 20))

assignments_s1 <- kclusts_s1 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1))
```

```{r}
clusters5_s1_spread <- assignments_s1 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 

clusters5_s1 <- merge(clusters5_s1_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")

```

```{r}
comp_rebase_s1_5cl <- list(as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 1,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 2,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 3,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 4,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 5,]$Show_Name)))

```


##S2 - 5 Clusters
```{r}
cluster_s2 <- dct_spread %>% 
  filter(Season_num == 2) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s2, centers = .$k, nstart = 20))

assignments_s2 <- kclusts_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s2))
```

```{r}
clusters5_s2_spread<- assignments_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 2)) 

clusters5_s2 <- merge(clusters5_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")
```

```{r}
comp_rebase_s2_5cl <- list(as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 5,]$Show_Name)))

```


##sep - 5 clusters

```{r}
temp1 <- filter(dct_spread, Season_num == 1)
temp2 <- filter(dct_spread, Season_num == 2)
temp2_newcols <- c(paste("X", 101:200, sep = ""))
colnames(temp2)[5:ncol(temp2)] <- c(temp2_newcols)

dct_spread_s1_s2 <- bind_cols(temp1, temp2[, 5:ncol(temp2)])
rm(temp1, temp2, temp2_newcols)

cluster_s1_s2 <- dct_spread_s1_s2 %>%
  select(-X, -Network, -Season_num, -Show_Name)

dct_s1_s2 <- read.csv("CENT_rebase_dct_s1_s2.csv")
```

```{r}
set.seed(12)
kclusts_s1_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1_s2, centers = .$k, nstart = 20))

assignments_s1_s2 <- kclusts_s1_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1_s2))
```

```{r}
clusters5_s1_s2_spread <- assignments_s1_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_s1_s2) 

clusters5_s1_s2 <- merge(clusters5_s1_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                         dct_s1_s2, by = "Show_Name")
```

```{r}
comp_rebase_sep_5cl <- list(as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 5,]$Show_Name)))
```


##cont - 5 clusters
```{r}
dct_cont <- read.csv("CENT_rebase_dct_cont.csv")
dct_spread_cont <- read.csv("CENT_rebase_dct_spread_cont.csv")
cluster_cont <- dct_spread_cont %>%
  select(-X, -Network, -Show_Name)
```

```{r}
set.seed(12)
kclusts_cont <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_cont, centers = .$k, nstart = 20))

assignments_cont <- kclusts_cont %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_cont))
```

```{r}
clusters5_cont_spread <- assignments_cont %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_cont) 

clusters5_cont <- merge(clusters5_cont_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                          dct_cont, by = "Show_Name")
```

```{r}
comp_rebase_cont_5cl <- list(as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 1,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 2,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 3,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 4,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 5,]$Show_Name)))
```


#Rebase - tadpole

##sep, 5 clusters
```{r}
dct_spread <- read.csv("CENT_rebase_dct_spread.csv")
temp1 <- filter(dct_spread, Season_num == 1)
temp2 <- filter(dct_spread, Season_num == 2)
temp2_newcols <- c(paste("X", 101:200, sep = ""))
colnames(temp2)[5:ncol(temp2)] <- c(temp2_newcols)

tadpole_spread_s1_s2 <- bind_cols(temp1, temp2[, 5:ncol(temp2)])
rm(temp1, temp2, temp2_newcols)

tadpole_s1_s2 <- tadpole_spread_s1_s2 %>%
  select(-X, -Network, -Season_num, -Show_Name)
```


```{r}
set.seed(12)
tadpole_clust5_s1_s2 <- TADPole(tadpole_s1_s2, k = 5L, window.size = 2, dc = 2)

tadpole_clust5_s1_s2_df<- tadpole_spread_s1_s2

tadpole_clust5_s1_s2_df$cluster <- tadpole_clust5_s1_s2$cl  
```


```{r}
tadpole5_s1_s2_long <- gather(tadpole_clust5_s1_s2_df, key = period, value = dct_values ,X1:X200) %>% 
  select(-X)
tadpole5_s1_s2_long$period <- as.numeric(sub("X", "", tadpole5_s1_s2_long$period ))
tadpole5_s1_s2_long$period <- as.numeric(tadpole5_s1_s2_long$period)
```

```{r}
comp_rebase_sep_5cl_tadpole <- list(as.character(unique(tadpole_clust5_s1_s2_df[tadpole_clust5_s1_s2_df$cluster == 1,]$Show_Name)),
      as.character(unique(tadpole_clust5_s1_s2_df[tadpole_clust5_s1_s2_df$cluster == 2,]$Show_Name)),
      as.character(unique(tadpole_clust5_s1_s2_df[tadpole_clust5_s1_s2_df$cluster == 3,]$Show_Name)),
      as.character(unique(tadpole_clust5_s1_s2_df[tadpole_clust5_s1_s2_df$cluster == 4,]$Show_Name)),
      as.character(unique(tadpole_clust5_s1_s2_df[tadpole_clust5_s1_s2_df$cluster == 5,]$Show_Name)))

```


#Raw - kmeans

##S1 - 5 Clusters
```{r}
dct_df <- read.csv("CENT_dct.csv")
dct_spread <- read.csv("CENT_dct_spread.csv")
```

```{r}
cluster_s1 <- dct_spread %>% 
  filter(Season_num == 1) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s1 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1, centers = .$k, nstart = 20))

assignments_s1 <- kclusts_s1 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1))
```

```{r}
clusters5_s1_spread <- assignments_s1 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 

clusters5_s1 <- merge(clusters5_s1_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")
```

```{r}
comp_raw_s1_5cl <- list(as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 1,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 2,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 3,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 4,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 5,]$Show_Name)))

```


##S2 - 5 Clusters
```{r}
cluster_s2 <- dct_spread %>% 
  filter(Season_num == 2) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s2, centers = .$k, nstart = 20))

assignments_s2 <- kclusts_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s2))
```

```{r}
clusters5_s2_spread<- assignments_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 2)) 

clusters5_s2 <- merge(clusters5_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")
```

```{r}
comp_raw_s2_5cl <- list(as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 5,]$Show_Name)))

```


##sep - 5 clusters

```{r}
temp1 <- filter(dct_spread, Season_num == 1)
temp2 <- filter(dct_spread, Season_num == 2)
temp2_newcols <- c(paste("X", 101:200, sep = ""))
colnames(temp2)[5:ncol(temp2)] <- c(temp2_newcols)

dct_spread_s1_s2 <- bind_cols(temp1, temp2[, 5:ncol(temp2)])
rm(temp1, temp2, temp2_newcols)

cluster_s1_s2 <- dct_spread_s1_s2 %>%
  select(-X, -Network, -Season_num, -Show_Name)

dct_s1_s2 <- read.csv("CENT_dct_s1_s2.csv")
```

```{r}
set.seed(12)
kclusts_s1_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1_s2, centers = .$k, nstart = 20))

assignments_s1_s2 <- kclusts_s1_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1_s2))
```

```{r}
clusters5_s1_s2_spread <- assignments_s1_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_s1_s2) 

clusters5_s1_s2 <- merge(clusters5_s1_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                         dct_s1_s2, by = "Show_Name")
```

```{r}
comp_raw_sep_5cl <- list(as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 5,]$Show_Name)))
```


##cont - 5 clusters
```{r}
dct_cont <- read.csv("CENT_dct_cont.csv")
dct_spread_cont <- read.csv("CENT_dct_spread_cont.csv")
cluster_cont <- dct_spread_cont %>%
  select(-X, -Network, -Show_Name)
```

```{r}
set.seed(12)
kclusts_cont <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_cont, centers = .$k, nstart = 20))

assignments_cont <- kclusts_cont %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_cont))
```

```{r}
clusters5_cont_spread <- assignments_cont %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_cont) 

clusters5_cont <- merge(clusters5_cont_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                          dct_cont, by = "Show_Name")
```

```{r}
comp_raw_cont_5cl <- list(as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 1,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 2,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 3,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 4,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 5,]$Show_Name)))
```


#Raw - tadpole, 5 clustres, cont

```{r}
dct_cont <- read.csv("CENT_dct_cont.csv")
dct_spread_cont <- read.csv("CENT_dct_spread_cont.csv")
dtw_df_cont <- dct_spread_cont %>%
  select(-X, -Network, -Show_Name)
```

```{r}
set.seed(12)
tadpole_clust5_cont <- TADPole(dtw_df_cont, k = 5L, window.size = 3, dc = 10)

tadpole_clust5_cont_df<- dct_spread_cont

tadpole_clust5_cont_df$cluster <- tadpole_clust5_cont$cl  
```


```{r}
tadpole5_cont_long <- gather(tadpole_clust5_cont_df, key = period, value = dct_values ,X1:X100) %>% 
  select(-X)
tadpole5_cont_long$period <- as.numeric(sub("X", "", tadpole5_cont_long$period ))
tadpole5_cont_long$period <- as.numeric(tadpole5_cont_long$period)
```

###Shows in each cluster

```{r}
comp_raw_cont_5cl_tadpole <- list(as.character(unique(tadpole_clust5_cont_df[tadpole_clust5_cont_df$cluster == 1,]$Show_Name)),
      as.character(unique(tadpole_clust5_cont_df[tadpole_clust5_cont_df$cluster == 2,]$Show_Name)),
      as.character(unique(tadpole_clust5_cont_df[tadpole_clust5_cont_df$cluster == 3,]$Show_Name)),
      as.character(unique(tadpole_clust5_cont_df[tadpole_clust5_cont_df$cluster == 4,]$Show_Name)),
      as.character(unique(tadpole_clust5_cont_df[tadpole_clust5_cont_df$cluster == 5,]$Show_Name)))

```


#Growth, kmeans

##S1 - 5 clusters
```{r}
dct_df <- read.csv("CENT_growth_dct.csv")
dct_spread <- read.csv("CENT_growth_dct_spread.csv")
```

```{r}
cluster_s1 <- dct_spread %>% 
  filter(Season_num == 1) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s1 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1, centers = .$k, nstart = 20))

assignments_s1 <- kclusts_s1 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1))
```

```{r}
clusters5_s1_spread <- assignments_s1 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 1)) 

clusters5_s1 <- merge(clusters5_s1_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")
```

```{r}
comp_growth_s1_5cl <- list(as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 1,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 2,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 3,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 4,]$Show_Name)), 
                     as.character(unique(clusters5_s1[clusters5_s1$cluster_kmeans_5 == 5,]$Show_Name)))
```


##S2 - 5 clusters
```{r}
cluster_s2 <- dct_spread %>% 
  filter(Season_num == 2) %>%
  ungroup() %>%
  select(-X, -Network, -Season_num, -Show_Name)
```

```{r}
set.seed(12)
kclusts_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s2, centers = .$k, nstart = 20))

assignments_s2 <- kclusts_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s2))
```

```{r}
clusters5_s2_spread<- assignments_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(filter(dct_spread, Season_num == 2)) 

clusters5_s2 <- merge(clusters5_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                      dct_df, by = "Show_Name")
```

#### List Show Names within Clusters

```{r}
comp_growth_s2_5cl <- list(as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                     as.character(unique(clusters5_s2[clusters5_s2$cluster_kmeans_5 == 5,]$Show_Name)))

```


##Sep, 5 clusters
```{r}
temp1 <- filter(dct_spread, Season_num == 1)
temp2 <- filter(dct_spread, Season_num == 2)
temp2_newcols <- c(paste("X", 101:200, sep = ""))
colnames(temp2)[5:ncol(temp2)] <- c(temp2_newcols)

dct_spread_s1_s2 <- bind_cols(temp1, temp2[, 5:ncol(temp2)])
rm(temp1, temp2, temp2_newcols)

cluster_s1_s2 <- dct_spread_s1_s2 %>%
  select(-X, -Network, -Season_num, -Show_Name)

dct_s1_s2 <- read.csv("CENT_growth_dct_s1_s2.csv")
```

```{r}
set.seed(12)
kclusts_s1_s2 <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_s1_s2, centers = .$k, nstart = 20))

assignments_s1_s2 <- kclusts_s1_s2 %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_s1_s2))
```

```{r}
clusters5_s1_s2_spread <- assignments_s1_s2 %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_s1_s2) 

clusters5_s1_s2 <- merge(clusters5_s1_s2_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                         dct_s1_s2, by = "Show_Name")
```

```{r}
comp_growth_sep_5cl <- list(as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 1,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 2,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 3,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 4,]$Show_Name)),
                        as.character(unique(clusters5_s1_s2[clusters5_s1_s2$cluster_kmeans_5 == 5,]$Show_Name)))
```


##Cont, 5 clusters
```{r}
dct_cont <- read.csv("CENT_dct_cont_growth.csv")
dct_spread_cont <- read.csv("CENT_dct_spread_cont_growth.csv")
cluster_cont <- dct_spread_cont %>%
  select(-X, -Network, -Show_Name)
```

```{r}
set.seed(12)
kclusts_cont <- data.frame(k = 1:5) %>% 
  group_by(k) %>% 
  do(kclust = kmeans(cluster_cont, centers = .$k, nstart = 20))

assignments_cont <- kclusts_cont %>% group_by(k) %>% do(augment(.$kclust[[1]], cluster_cont))
```

```{r}
clusters5_cont_spread <- assignments_cont %>% 
  filter(k == 5) %>% 
  ungroup() %>% 
  select(.cluster) %>% 
  rename(cluster_kmeans_5 = .cluster) %>% 
  bind_cols(dct_spread_cont) 

clusters5_cont <- merge(clusters5_cont_spread[, c("cluster_kmeans_5", 
                                       "Show_Name")], 
                          dct_cont, by = "Show_Name")
```

```{r}
comp_growth_cont_5cl <- list(as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 1,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 2,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 3,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 4,]$Show_Name)),
                       as.character(unique(clusters5_cont[clusters5_cont$cluster_kmeans_5 == 5,]$Show_Name)))
```


-----------------------------------------------------------------------------------------------------------------------


#S1 clusters shows
```{r}

#length(intersect(comp_raw_s1_5cl[[1]], comp_growth_s1_5cl[[2]])) /
#  (length(unique(c(comp_raw_s1_5cl[[1]], comp_growth_s1_5cl[[2]]))))


a <- expand.grid(comp_growth_s1_5cl, comp_raw_s1_5cl)

b <- expand.grid(c(paste("growth", "[", 1:5, "]", sep = "")),
                       c(paste("raw", "[", 1:5, "]", sep = "")))

c <- paste(b$Var1, b$Var2, sep = "_")
a$clusts <- c
a <- bind_cols(a, b)

for (n in 1:25){
a$intersect[n] <- length(intersect(a$Var1[[n]], a$Var2[[n]]))
a$cluster_size1[n] <- length(unique(a$Var1[[n]]))
a$cluster_size2[n] <- length(unique(a$Var2[[n]]))
a$intersect_weight[n] <- length(intersect(a$Var1[[n]], a$Var2[[n]])) /
  (length(unique(c(a$Var1[[n]], a$Var2[[n]]))))

}


a2 <- expand.grid(comp_rebase_s1_5cl, comp_raw_s1_5cl)

b2 <- expand.grid(c(paste("rebase", "[", 1:5, "]", sep = "")),
                       c(paste("raw", "[", 1:5, "]", sep = "")))

c2 <- paste(b2$Var1, b2$Var2, sep = "_")
a2$clusts <- c2
a2 <- bind_cols(a2, b2)

for (n in 1:25){
a2$intersect[n] <- length(intersect(a2$Var1[[n]], a2$Var2[[n]]))
a2$cluster_size1[n] <- length(unique(a2$Var1[[n]]))
a2$cluster_size2[n] <- length(unique(a2$Var2[[n]]))
a2$intersect_weight[n] <- length(intersect(a2$Var1[[n]], a2$Var2[[n]])) /
  (length(unique(c(a2$Var1[[n]], a2$Var2[[n]]))))

}

class(a2$Var1)

a <- bind_rows(a, a2)



```


#Compare
```{r}
a3 <- expand.grid(comp_raw_s2_5cl, comp_raw_s1_5cl)

b3 <- expand.grid(c(paste("s2", "[", 1:5, "]", sep = "")),
                       c(paste("s1", "[", 1:5, "]", sep = "")))

c3 <- paste(b3$Var1, b3$Var2, sep = "_")
a3$clusts <- c3
a3 <- bind_cols(a3, b3)

for (n in 1:25){
a3$intersect[n] <- length(intersect(a3$Var1[[n]], a3$Var2[[n]]))
a3$cluster_size1[n] <- length(unique(a3$Var1[[n]]))
a3$cluster_size2[n] <- length(unique(a3$Var2[[n]]))
a3$intersect_weight[n] <- length(intersect(a3$Var1[[n]], a3$Var2[[n]])) /
  (length(unique(c(a3$Var1[[n]], a3$Var2[[n]]))))

}


```

```{r}
a4 <- expand.grid(comp_growth_s2_5cl, comp_growth_s1_5cl)

b4 <- expand.grid(c(paste("s2", "[", 1:5, "]", sep = "")),
                       c(paste("s1", "[", 1:5, "]", sep = "")))

c4 <- paste(b4$Var1, b4$Var2, sep = "_")
a4$clusts <- c4
a4 <- bind_cols(a4, b4)

for (n in 1:25){
a4$intersect[n] <- length(intersect(a4$Var1[[n]], a4$Var2[[n]]))
a4$cluster_size1[n] <- length(unique(a4$Var1[[n]]))
a4$cluster_size2[n] <- length(unique(a4$Var2[[n]]))
a4$intersect_weight[n] <- length(intersect(a4$Var1[[n]], a4$Var2[[n]])) /
  (length(unique(c(a4$Var1[[n]], a4$Var2[[n]]))))

}

```














