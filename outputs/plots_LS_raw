---
title: "Exploratory Plots for Raw LS Impressions"
output:
  html_notebook: default
  html_document: default
---

```{r}
##################################################################################
#inputs: CENT_showlevel.csv
#purpose: Exploratory plots for raw, growth and 1st episode rebase trends,
#         non-normalized C3 impressions
##################################################################################
```

```{r}
library(dplyr)
library(ggplot2)
library(plotly)
library(scales)
```

Read Data
```{r}
df <- read.csv("CENT_showlevel.csv")
df <- select(df, -X)
```


Define ggplot theme
```{r}
my_theme <-  theme(panel.background = element_blank(),
        panel.grid.major = element_line(color = "#d8d8d8", linetype = "dotted"),
        panel.grid.major.x = element_blank(),
        plot.title = element_text(hjust = 0.5),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.line.x = element_line(color = "#d8d8d8", linetype = "dashed"),
        strip.background = element_blank())
```


Descriptive measures
```{r}
#cases per network
table(df$Network)

#how many shows
length(unique(df$Show_Name))
```

Episode count of shows 
```{r}
ggplotly(ggplot(df %>% filter(Season_num < 3 & Season_num != 0) %>%  group_by(Network, Show_Name, Season_num) %>%
  summarise(episodes = max(Episode_num))) +
  geom_histogram(aes(x= episodes), binwidth = 1) +
  my_theme,
  width = 1000,
  height = 750)

```



```{r}
length(which((df %>% filter(Season_num < 3 & Season_num != 0) %>%  group_by(Network, Show_Name, Season_num) %>%
  summarise(episodes = max(Episode_num)))$episodes > 14)) 
```

#S01 to S02

```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Season_num) %>%
                  summarise(LS = mean(LS_Imps))) +
           geom_line(aes(x = Season_num, y = LS)) +
           geom_line(data = (df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Network, Season_num) %>%
                  summarise(LS = mean(LS_Imps))), aes(x = Season_num, y = LS, color = Network)) +
           my_theme +
  ggtitle("S1-S2 Trends for All Networks (Average LS Impressions)"))

```

```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
           geom_smooth(aes(x = Season_num, y = LS_Imps, color = Network), se = F, method = "lm")+
           stat_smooth(aes(x = Season_num, y = LS_Imps, color = Show_Name), geom = "line", se = F, method = "lm",
              alpha = 0.4) +
           geom_smooth(aes(x = Season_num, y = LS_Imps), color = "black", se = F, method = "lm",
              linetype = "dashed") +
           my_theme +
  ggtitle("S1-S2 Linear Trends for All Shows (LS Impressions)"),
  width = 1000,
  height = 750)

```


#Impressions

Shows

```{r}

ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_line(aes(x = Episode_num, y = LS_Imps, color = Show_Name), se = F, method = "lm",
              alpha = 0.4, formula = y ~ 0 + x) +
  geom_smooth(aes(x = Episode_num, y = LS_Imps), color = "black", se = F, method = lm,
              linetype = "dashed") +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Trends for All Shows (LS Impressions)"),
  width = 750,
  height = 1000)

```

```{r}

ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  stat_smooth(aes(x = Episode_num, y = LS_Imps, color = Show_Name), geom = "line", se = F, method = "lm",
              alpha = 0.5) +
  stat_smooth(aes(x = Episode_num, y = LS_Imps), geom = "line", color = "black", se = F, method = "lm",
              linetype = "dashed", alpha = 0.7) +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Linear Trends for All Shows (LS Impressions)"),
  width = 750,
  height = 1000)

```

S01 - S02 trend all networks. C3 Impressions. Episode Average
```{R}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Network, Season_num, Episode_num) %>% summarise(avg_imp = mean(LS_Imps))) +
  geom_point(aes(x = Episode_num, y = avg_imp, color = Network)) +
  geom_line(aes(x = Episode_num, y = avg_imp, color = Network)) +
  geom_line(data = (df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Season_num, Episode_num) %>% summarise(avg_imp = mean(LS_Imps))), 
    aes(x = Episode_num, y = avg_imp), color = "black", linetype = "dashed") +
  scale_y_continuous(labels = comma) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Trends for All Networks (LS Impressions, Episode Average)") +
  my_theme,
  width = 1000,
  height = 750)
```

S01 - S02 linear trend all networks. C3 Impressions
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_Imps, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_Imps, color = Network), se = F, method = lm) +
  geom_smooth(aes(x = Episode_num, y = LS_Imps), color = "black", se = F, method = lm,
              linetype = "dashed") +
  scale_y_continuous(labels = comma) +
  coord_cartesian(ylim = c(0, 750000)) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Linear Trends for All Networks (LS Impressions)") +
  my_theme,
  width = 1000,
  height = 750)
  
```

S01 - S02 smooth trend all networks. C3 Impressions
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_Imps, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_Imps, color = Network), se = F) +
  geom_smooth(aes(x = Episode_num, y = LS_Imps), color = "black", se = F,
              linetype = "dashed") +
  scale_y_continuous(labels = comma) +
  coord_cartesian(ylim = c(0, 750000)) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Smooth Trends for All Networks (LS Impressions)") +
  my_theme,
  width = 1000,
  heght = 750)
  
```


#Growth

Shows

```{r}

ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_line(aes(x = Episode_num, y = LS_growth, color = Show_Name), se = F,
              alpha = 0.4) +
  stat_smooth(aes(x = Episode_num, y = LS_growth), geom = "line", color = "black", se = F, method = "lm",
              linetype = "dashed", alpha = 0.7) +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Trends for All Shows (LS Growth)"),
  width = 750,
  height = 1000)
```
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  stat_smooth(aes(x = Episode_num, y = LS_growth, color = Show_Name), geom = "line", se = F, method = "lm",
              alpha = 0.5) +
  stat_smooth(aes(x = Episode_num, y = LS_growth), geom = "line", color = "black", se = F, method = "lm",
              linetype = "dashed", alpha = 0.7) +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Linear Trends for All Shows (LS Growth)"),
  width = 750,
  height = 1000)

```

S01 - S02 trend all networks. Growth. Episode Average
```{R}
ggplotly(ggplot(a <- df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Network, Season_num, Episode_num) %>% summarise(avg_growth = mean(LS_growth, na.rm = T))) +
  geom_point(aes(x = Episode_num, y = avg_growth, color = Network)) +
  geom_line(aes(x = Episode_num, y = avg_growth, color = Network)) +
  geom_line(data = (df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Season_num, Episode_num) %>% summarise(avg_growth = mean(LS_growth, na.rm = T))), 
    aes(x = Episode_num, y = avg_growth), color = "black", linetype = "dashed") +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Trends for All Networks (LS Growth, Episode Average)") +
  my_theme,
  width = 1000,
  height = 750)
```

S01 - S02 linear trend all networks. Growth
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_growth, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_growth, color = Network), se = F, method = lm) +
  geom_smooth(aes(x = Episode_num, y = LS_growth), color = "black", se = F, method = lm,
              linetype = "dashed") +
  coord_cartesian(ylim = c(0.5, 1.5)) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Linear Trends for All Networks (LS Growth)") +
  my_theme,
  width = 1000,
  height = 750)
  
```

S01 - S02 smooth trend all networks. Growth
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_growth, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_growth, color = Network), se = F) +
  geom_smooth(aes(x = Episode_num, y = LS_growth), color = "black", se = F,
              linetype = "dashed") +
  coord_cartesian(ylim = c(0.5, 1.5)) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Smooth Trends for All Networks (LS Growth)") +
  my_theme,
  width = 1000,
  height = 750)
```


#Rebase

Shows

```{r}

ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_line(aes(x = Episode_num, y = LS_rebase, color = Show_Name), se = F,
              alpha = 0.4) +
  stat_smooth(aes(x = Episode_num, y = LS_rebase), geom = "line", color = "black", se = F, method = "lm",
              linetype = "dashed", alpha = 0.7) +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Trends for All Shows (LS Rebase)"),
  width = 750,
  height = 1000)
```

```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  stat_smooth(aes(x = Episode_num, y = LS_rebase, color = Show_Name), geom = "line", se = F, method = "lm",
              alpha = 0.5) +
  stat_smooth(aes(x = Episode_num, y = LS_rebase), geom = "line", color = "black", se = F, method = "lm",
              linetype = "dashed", alpha = 0.7) +
  facet_grid(Network ~ Season_num ) +
  my_theme +
  theme(legend.position = "none") +
  ggtitle("S1-S2 Linear Trends for All Shows (LS Rebase)"),
  width = 750,
  height = 1000)
```

S01 - S02 trend all networks. Ep1 Rebase. Episode Average
```{R}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Network, Season_num, Episode_num) %>% summarise(avg_rebase = mean(LS_rebase))) +
  geom_point(aes(x = Episode_num, y = avg_rebase, color = Network)) +
  geom_line(aes(x = Episode_num, y = avg_rebase, color = Network)) +
  geom_line(data = (df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3) %>% 
                  group_by(Season_num, Episode_num) %>% summarise(avg_rebase = mean(LS_rebase))), 
    aes(x = Episode_num, y = avg_rebase), color = "black", linetype = "dashed") +
  scale_y_continuous(labels = comma) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Trends for All Networks (LS Episode 1 Rebase, Episode Average)") +
  my_theme,
  width = 1000,
  heght = 750)
```

S01 - S02 linear trend all networks. Ep1 Rebase
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_rebase, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_rebase, color = Network), se = F, method = lm) +
  geom_smooth(aes(x = Episode_num, y = LS_rebase), color = "black", se = F, method = lm,
              linetype = "dashed") +
  coord_cartesian(ylim = c(-250000, 250000)) +
  scale_y_continuous(labels = comma) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Linear Trends for All Networks (LS Episode 1 Rebase)") +
  my_theme,
  width = 1000,
  height = 750)
  
```

S01 - S02 smooth trend all networks. Ep1 Rebase
```{r}
ggplotly(ggplot(df %>% filter(Episode_num < 15 & Season_num > 0 & Season_num <3)) +
  geom_jitter(aes(x = Episode_num, y = LS_rebase, color = Network), alpha = 0.35) +
  geom_smooth(aes(x = Episode_num, y = LS_rebase, color = Network), se = F) +
  geom_smooth(aes(x = Episode_num, y = LS_rebase), color = "black", se = F,
              linetype = "dashed") +
  coord_cartesian(ylim = c(-500000, 500000)) +
  scale_y_continuous(labels = comma) +
  facet_wrap(~Season_num) +
  ggtitle("S1-S2 Smooth Trends for All Networks (LS Episode 1 Rebase)") +
  my_theme,
  width = 1000,
  height = 750)
  
```
